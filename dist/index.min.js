const e={},t=[(e,t)=>e[t],(e,t)=>e.hasAttribute(t),(e,t)=>e.getAttribute(t),e=>1];class s extends WeakMap{use=(e,t={})=>this.get(e)||this.set(e,t).get(e)}const i=new s,n=new s,a=new s,o=(e,t)=>"number"===t?0|e:e;class h{#e;#t=[];#s=0;constructor(e){this.#e=e}#i=()=>1==++this.#s&&queueMicrotask((()=>{this.#t.map((e=>e())),this.#s=0}));get value(){return this.#e}set value(e){this.#e=e,this.#i()}onChange(e,t){t&&e(this.#e),this.#t.push((()=>e(this.#e)))}when(e,t=[]){let s=new h(e(this.#e));return this.onChange((t=>s.value=e(t))),t.map((e=>e.onChange(this.#i))),s}}let c={},r={};class l extends HTMLElement{#n=(e,t=this)=>t.getAttribute(e);#a=(e,s)=>{let i=e[0],a=e.slice(1),o=this.#n(e,s),h=".?!@".indexOf(i);if(h>=0){const i=t[h](s,a);n.use(s)[e]={init:i,name:o},queueMicrotask((()=>s.removeAttribute(e)))}};static Signal=h;static hydrate=(t,s,o)=>{for(let h of t){const t=document.querySelector(h).shadowRoot,r=a.get(t)||e;for(let a in s){const h=i.get(t)[a],l=n.get(h);if(!l)continue;const u=s[a];for(let t in u){let s=u[t];t in c&&(s=c[t](s));const{name:i,init:n}=l[t.toLowerCase()]||e,{signal:a,type:d,id:g}=i&&r[i]||e;o instanceof Object&&g&&a&&(o[g]=a);const m=t.slice(1),f=e=>s({type:d,name:m,signal:a,signals:r,init:n,domNode:h,e:e});i&&(t.startsWith("@")?h.addEventListener(m,f):queueMicrotask(f))}}}};static plugin=(e,t)=>(c[e]=t)&&r[e]&&r[e]();static usable=(e,t=[])=>{for(let s of e)c[s]||t.push(new Promise((e=>r[s]=e)));return Promise.all(t)};static rerender=({signal:e,name:t,domNode:s},i=!0)=>e.onChange((e=>s[t]=e),i);static render=e=>({domNode:t,name:s})=>t[s]="function"==typeof e?e():e;connectedCallback(){const e=this[this.#n("for")||"parentNode"],t=this.getRootNode(),s=this.#n("new"),n=s||this.#n("ref"),c=this.#n("type"),{id:r,textContent:l}=this;i.use(t)[n]=e,s&&(a.use(t)[n]={signal:new h(o(l,c)),type:c,id:r});for(let t of e.getAttributeNames())this.#a(t,e);this.className||this.replaceWith(l)}}customElements.define("sig-nal",l);
