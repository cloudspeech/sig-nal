let e={},t=[(e,t)=>e[t],(e,t)=>e.hasAttribute(t),(e,t)=>e.getAttribute(t),e=>1];class s extends WeakMap{use=(e,t={})=>this.get(e)||this.set(e,t).get(e)}let i=new s,a=new s,n=new s,l=(e,t)=>"number"===t?0|e:e;class h{#e;#t=[];#s=0;constructor(e){this.#e=e}#i=()=>1==++this.#s&&queueMicrotask((()=>{this.#t.map((e=>e())),this.#s=0}));get value(){return this.#e}set value(e){this.#e=e,this.#i()}onChange(e,t){t&&e(this.#e),this.#t.push((()=>e(this.#e)))}when(e,t=[]){let s=new h(e(this.#e));return this.onChange((t=>s.value=e(t))),t.map((e=>e.onChange(this.#i))),s}}let o={},r={};class u extends HTMLElement{#a=(e,t=this)=>t.getAttribute(e);#n=(e,s)=>{let i=e[0],n=e.slice(1),l=this.#a(e,s),h=".?!@".indexOf(i);if(h>=0){let i=t[h](s,n);a.use(s)[e]={init:i,name:l},queueMicrotask((()=>s.removeAttribute(e)))}};static Signal=h;static hydrate=(t,s,l)=>{for(let h of t){let t=document.querySelector(h).shadowRoot,r=n.get(t)||e;for(let n in s){let h=i.get(t)[n],u=a.get(h);if(u){let t=s[n];for(let s in t){let i=t[s];s in o&&(i=o[s](i));let{name:a,init:n}=u[s.toLowerCase()]||e,{signal:c,type:d,id:g}=a&&r[a]||e;l instanceof Object&&g&&c&&(l[g]=c);let m=s.slice(1),f=e=>i({type:d,name:m,signal:c,signals:r,init:n,domNode:h,e:e});a&&(s.startsWith("@")?h.addEventListener(m,f):queueMicrotask(f))}}}}};static plugin=(e,t)=>(o[e]=t)&&r[e]&&r[e]();static usable=(e,t=[])=>{for(let s of e)o[s]||t.push(new Promise((e=>r[s]=e)));return Promise.all(t)};static rerender=({signal:e,name:t,domNode:s},i=!0)=>e.onChange((e=>s[t]=e),i);static render=e=>({domNode:t,name:s})=>t[s]="function"==typeof e?e():e;connectedCallback(){let e=this[this.#a("for")||"parentNode"],t=this.getRootNode(),s=this.#a("new"),a=s||this.#a("ref"),o=this.#a("type"),{id:r,textContent:u}=this;i.use(t)[a]=e,s&&(n.use(t)[a]={signal:new h(l(u,o)),type:o,id:r});for(let t of e.getAttributeNames())this.#n(t,e);this.className||this.replaceWith(u)}}customElements.define("sig-nal",u);
